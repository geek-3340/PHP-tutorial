<?php

  // 前置演算子
  $x = 5;
  $y = ++$x; // 前置演算子は変数の値を先に増やす
  print "x: $x, y: $y<br>";

  // 後置演算子
  $x = 5;
  $y = $x++; // 後置演算子は変数の値を後で増やす
  print "x: $x, y: $y<br>";

  // マジカルインクリメント
  $b = 'B';
  print ++$b; // マジカルインクリメントは変数の値を1増やす
  // 減算子は無い

  // 配列の結合
  $fruits = [
    "りんご" => "apple",
    "ばなな" => "banana",
    "みかん" => "orange"
  ];
  $fruits_2 = [
    "りんご" => "green",
    "みかん" => "yellow",
    "さくらんぼ" => "cherry"
  ];

  $result = $fruits + $fruits_2; // 配列の結合
  print_r($result); // 結合後の配列を確認
  print '<br>';
  // 演算の左辺の配列にキーが存在する場合、右辺の配列の値は無視される

    // 参照による変数の代入

  // 値による変数の代入は、変数が異なるメモリ位置を指す方法です。
  // これにより、片方の変数の値を変更しても、もう片方の変数には影響を与えません。
  $a = 10;
  $b = $a; // $bは$aの値をコピー
  print "a: $a, b: $b<br>"; // a: 10, b: 10
  $a = 20; // $aの値を変更
  print "a: $a, b: $b<br>"; // a: 20, b: 10

  // 参照による変数の代入は、変数が同じメモリ位置を指すようにする方法です。
  // これにより、片方の変数の値を変更すると、もう片方の変数も影響を受けます。
  $a = 10;
  $b = &$a; // $bは$aの参照を持つ
  print "a: $a, b: $b<br>"; // a: 10, b: 10
  $a = 20; // $aの値を変更
  print "a: $a, b: $b<br>"; // a: 20, b: 20

  // 分割代入
  // 分割代入は、配列やオブジェクトから値を抽出して個々変数に代入する方法です。
  $array = [1, 2, 3];
  [$x, $y, $z] = $array; // 配列の値を個々の変数に代入
  print "x: $x, y: $y, z: $z<br>"; // x: 1, y: 2, z: 3

  // 一部要素の分割代入
  // 配列の一部の要素を分割代入することも可能です。
  $array = [1, 2, 3, 4];
  [$x, , $z] = $array; // 2番目の要素は無視
  print "x: $x, z: $z<br>"; // x: 1, z: 3

  // ネストされた配列の分割代入
  // ネストされた配列から値を抽出して個々の変数に代入することもできます。
  $nested_array = [[1, 2], [3, 4]];
  [[ $a, $b ], [ $c, $d ]] = $nested_array; // ネストされた配列の値を個々の変数に代入
  print "a: $a, b: $b, c: $c, d: $d<br>"; // a: 1, b: 2, c: 3, d: 4